{
  "extends": ["eslint:recommended", "plugin:prettier/recommended"],
  "rules": {
    "no-debugger": "off",
    "object-curly-spacing": ["error", "always"],
    // Allow jsx tags inside .js files.
    "react/jsx-filename-extension": [1, { "extensions": [".js", ".jsx"] }],
    // Throw warning instead of error when using array index as a key.
    "react/no-array-index-key": 1,
    // Allow modules with named exports only.
    "import/prefer-default-export": 0,
    // Throw warning instead of error. Feel free to choose your favorite option https://eslint.org/docs/rules/arrow-body-style
    "arrow-body-style": ["warn", "as-needed"],
    // Make prettier code formatting suggestions more verbose.
    "prettier/prettier": ["warn"],
    // Throw warning when <a href="#"> or <a href="javascript:void(0)"> are used. Use <button> instead.
    "jsx-a11y/anchor-is-valid": ["warn", { "aspects": ["invalidHref"] }],
    // Allow using (props) => <Component /> and ({propName}) => <Component /> syntax.
    "react/destructuring-assignment": "off",
    // Disable <Fragment> => <> replacement. Feel free to change
    "react/jsx-fragments": "off",
    // Below is the set of functional rules to warn developer about accidental mutations, which may cause error in reducers etc.
    // No delete operator.
    //"fp/no-delete": "warn",
    // Warning when Object.assign(a, b) used, since it mutates first argument. Object.assign({}, a, b) is ok.
    "fp/no-mutating-assign": "warn",
    // Warning when mutating method (pop, push, reverse, shift, sort, splice, unshift, etc) is used. Ramda and lodash/fp are allowed (_.pop, R.push)
    // Warning when mutating operators (++, --, etc) are used, object = {} also. `Component.propTypes`, `Component.defaultProps`, common.js (`module.exports`) and `ref.current` are ok.
    "react/jsx-first-prop-new-line": [2, "multiline"],
    "react/jsx-max-props-per-line": [2, { "maximum": 1, "when": "multiline" }],
    "react/jsx-indent-props": [2, 2],
    "react/jsx-closing-bracket-location": [2, "tag-aligned"],
    "react/prop-types": 0,
    "no-unused-vars": 2,
    "react/jsx-uses-vars": "error",
    "react/jsx-uses-react": "error",
    "no-var": "error",
    "curly": "error",
    "prefer-const": "warn",
    "eqeqeq": "warn",
    "react-hooks/rules-of-hooks": "error", // Checks rules of Hooks
    "react-hooks/exhaustive-deps": "off" // Checks effect dependencies
  },
  "plugins": ["prettier", "fp", "react", "jsx-a11y", "import", "react-hooks"],
  "settings": {
    "import/resolver": {
      "node": {
        "moduleDirectory": ["node_modules", "./src"]
      }
    }
  },
  "env": {
    "browser": true,
    "node": true,
    "es6": true
  },
  "overrides": [
    {
      "files": ["./*.js"],
      "rules": {
        "import/no-extraneous-dependencies": [
          "warn",
          {
            "devDependencies": true,
            "optionalDependencies": false,
            "peerDependencies": false
          }
        ],
        "global-require": 0
      }
    },
    {
      "files": ["**/*.spec.js"],
      "rules": {
        "react/prop-types": "off"
      }
    }
  ],
  "parser": "@babel/eslint-parser"
}
